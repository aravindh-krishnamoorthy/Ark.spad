++
++ Identity matrix
++
eye(n) == diagonalMatrix [1 for i in 1..n]
eye(m,n) == eye(max(m,n))(1..m,1..n)

++
++ Zeros matrix
++
zeros(n) == matrix [[0 for j in 1..n] for i in 1..n]
zeros(m,n) == zeros(max(m,n))(1..m,1..n)

++
++ Ones matrix
++
ones(n) == matrix [[1 for j in 1..n] for i in 1..n]
ones(m,n) == ones(max(m,n))(1..m,1..n)

++
++ Conjugate transpose
++
ctranspose(X) ==
    _Y := copy(X)
    for n in rowSlice(_Y) repeat for m in colSlice(_Y) repeat _Y(n,m) := conjugate(_Y(m,n))
    _Y

++
++ Singular values
++
svdvals(X) == map(sqrt, zerosOf(determinant(X*ctranspose(X) - _e*eye(nrows(X))), _e))

++
++ Eigenvalues
++
eigvals(X) == zerosOf(determinant(X - _e*eye(nrows(X))), _e)
